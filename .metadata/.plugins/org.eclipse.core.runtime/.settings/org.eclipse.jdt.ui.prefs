content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"/>
content_assist_number_of_computers=24
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="print something" enabled\="true" name\="syso">System.out.println();</template><template autoinsert\="false" context\="java" deleted\="false" description\="codigo para formular casos test" enabled\="true" name\="diegotest">ClaseObjeto nombre \= new ClaseObjeto();&\#13;\r\n\t\t&\#13;\r\n\t\tString[] Correctos \= {&\#13;\r\n\t\t\t\t"78484464T","72376173A","01817200Q","95882054E","63587725Q",&\#13;\r\n\t\t\t\t"26861694V","21616083Q","26868974Y","40135330P","89044648X"&\#13;\r\n\t\t\t\t};&\#13;\r\n\t\t&\#13;\r\n\t\tString[] Incorrectos \= {&\#13;\r\n\t\t\t\t"78484464O","72376173\u00D1","01817200f","958820"   ,"sa3587725",&\#13;\r\n\t\t\t\t"26861694I","21616083a","268689747","4013533sg","X89044648"&\#13;\r\n\t\t\t\t};&\#13;\r\n\t\tint contador \= 1;&\#13;\r\n\t\tfor (int i\=0; i &lt; Correctos.length; i++){&\#13;\r\n\t\t\tif (nombre.Checknombre(Correctos[i]) \=\= true){&\#13;\r\n\t\t\t\tSystem.out.println("lo que sea " + contador + "\: " + Correctos[i] + " es correcto");&\#13;\r\n\t\t\t\tcontador++;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\telse {&\#13;\r\n\t\t\t\tSystem.out.println("lo que sea " + contador + "\: " + Correctos[i] + " NO es correcto");&\#13;\r\n\t\t\t\tcontador++;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n\t\tfor (int j\=0; j &lt; Incorrectos.length; j++){&\#13;\r\n\t\t\tif (nombre.Checknombre(Incorrectos[j]) \=\= true){&\#13;\r\n\t\t\t\tSystem.out.println("lo que sea" + contador + "\: " + Incorrectos[j] + " es correcto");&\#13;\r\n\t\t\t\tcontador++;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t\telse {&\#13;\r\n\t\t\t\tSystem.out.println("lo que sea " + contador + "\: " + Incorrecto[j] + " NO es correcto");&\#13;\r\n\t\t\t\tcontador++;&\#13;\r\n\t\t\t}&\#13;\r\n\t\t}&\#13;\r\n&\#13;\r\n\t}</template><template autoinsert\="true" context\="swt-statements" deleted\="false" description\="ExpresionesRegularesSobreDni" enabled\="true" name\="expresiones">\t\t&\#13;\r\n\t\t// Expresi\u00F3n regular para validar DNI OR NIE&\#13;\r\n&\#13;\r\nString regex \= "(^\\\\d{8}[A-Z&amp;&amp;[^I\u00C3\u2018OU]])|(^[XYZ]\\\\d{7}[A-Z&amp;&amp;[^I\u00C3\u2018OU]])";&\#13;\r\n&\#13;\r\n/* Caso test b\u00E1sico\: debe mostrar el mensaje en consola\:&\#13;\r\n * "No se ha encotrado el patr\u00F3n en " &\#13;\r\n * o PASS&\#13;\r\n * */&\#13;\r\n&\#13;\r\n// caso test\: NIE incorrecto&\#13;\r\n&\#13;\r\nString dni \= "X12345678L";&\#13;\r\n&\#13;\r\n// Compilamos la expresi\u00F3n regular (creamos el patr\u00F3n)&\#13;\r\n&\#13;\r\nPattern patron \= Pattern.compile(regex);&\#13;\r\n&\#13;\r\n// Creamos el objeto matcher donde buscar la expresi\u00F3n regular (el patr\u00F3n) &\#13;\r\n&\#13;\r\nMatcher matcher \= patron.matcher(dni);&\#13;\r\n&\#13;\r\nSystem.out.println( matcher );&\#13;\r\n&\#13;\r\n// find() devuelve true si encuentra el patr\u00F3n en el matcher.&\#13;\r\n&\#13;\r\nif(matcher.find()){&\#13;\r\n\t\t System.out.println( dni + " PASS");&\#13;\r\n}&\#13;\r\nelse System.out.println( "No se ha encotrado el patr\u00F3n en " + dni); &\#13;\r\n&\#13;\r\n&\#13;\r\n&\#13;\r\n/* Casos test PASS */&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test DNI PASS **** \\n"); &\#13;\r\n&\#13;\r\nString[] casosTest \= { // casos DNI PASS&\#13;\r\n \t\t"78484464T","72376173A","01817200Q","95882054E","63587725Q",&\#13;\r\n \t\t"26861694V","21616083Q","26868974Y","40135330P","89044648X",&\#13;\r\n \t\t"80117501Z","34168723S","76857238R","66714505S","66499420A",&\#13;\r\n \t\t// casos NIE PASS&\#13;\r\n \t\t"X1234567T", "Y1234567T", "Z1234567T",&\#13;\r\n \t\t// casos NIE FAIL&\#13;\r\n \t\t"J1234567T", "H1234567T", "R1234567T",&\#13;\r\n \t\t"X12345678X", "X1234T", "X1234567I"&\#13;\r\n \t\t};&\#13;\r\n&\#13;\r\nfor(String caso \: casosTest){&\#13;\r\n\t&\#13;\r\n\t// Genero un objeto matcher para cada caso test&\#13;\r\n\t&\#13;\r\n\tMatcher match \= patron.matcher(caso);&\#13;\r\n\t&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\t&\#13;\r\n\t\t // group() extrae el string que satisface la expresi\u00F3n regular del patr\u00F3n  &\#13;\r\n\t\t&\#13;\r\n\t\t String cadenaMatchingRegex \= match.group();&\#13;\r\n\t\t &\#13;\r\n\t\t // Si el string que ha hecho matching con la expresi\u00F3n regular es igual al caso test \=&gt;&\#13;\r\n\t\t // \=&gt; hemos pasado el caso test&\#13;\r\n\t\t &\#13;\r\n\t\t if(cadenaMatchingRegex \=\= caso){&\#13;\r\n\t\t\t System.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t }&\#13;\r\n\t\t else System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( "No se ha encotrado el patr\u00F3n en " + caso ); &\#13;\r\n\t&\#13;\r\n}&\#13;\r\n&\#13;\r\n/* test casos FAIL - utilizando ArrayList de Strings */&\#13;\r\n&\#13;\r\n// casos test DNI FAIL&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test DNI FAIL **** \\n"); &\#13;\r\n&\#13;\r\nchar[] letrasNoPermitidas \= {'I', '\u00D1', 'O', 'U'};&\#13;\r\nint numeroCasos \= 15;&\#13;\r\nString caso;&\#13;\r\n&\#13;\r\nArrayList&lt;String&gt; casosTestFail \= new ArrayList&lt;&gt;();&\#13;\r\n&\#13;\r\n// generamos los casos test y los a\u00F1adimos al ArrayList&\#13;\r\nfor(int i \= 1; i &lt;\= numeroCasos; i++){&\#13;\r\n\tcaso \= "";&\#13;\r\n\tfor(int j \= 1; j &lt; 9; j++){&\#13;\r\n\t\tInteger caracterAscii \= ThreadLocalRandom.current().nextInt(48, 58); // 58 excluido&\#13;\r\n\t\tcaso \= caso + String.valueOf( Character.toChars(caracterAscii) );&\#13;\r\n\t}&\#13;\r\n\tcaso \= caso + letrasNoPermitidas[ ThreadLocalRandom.current().nextInt(0, 4) ];&\#13;\r\n\tcasosTestFail.add(caso);&\#13;\r\n}&\#13;\r\n&\#13;\r\nfor(String casoFail \: casosTestFail){&\#13;\r\n&\#13;\r\n\tMatcher match \= patron.matcher(casoFail);&\#13;\r\n&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\tString cadenaMatchingRegex \= match.group();&\#13;\r\n\t\tif(cadenaMatchingRegex \=\= casoFail){&\#13;\r\n\t\t\tSystem.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t}&\#13;\r\n\t\telse System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( casoFail + " FAIL"); &\#13;\r\n&\#13;\r\n}&\#13;\r\n&\#13;\r\n&\#13;\r\n// casos test NIE FAIL&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test NIE FAIL **** \\n"); &\#13;\r\n&\#13;\r\nchar[] letrasNIEPermitidas \= {'X', 'Y', 'Z'};&\#13;\r\n&\#13;\r\nArrayList&lt;String&gt; casosTestFailNIE \= new ArrayList&lt;&gt;();&\#13;\r\n&\#13;\r\n// generamos los casos test y los a\u00F1adimos al ArrayList&\#13;\r\nfor(int i \= 1; i &lt;\= numeroCasos; i++){&\#13;\r\n\tcaso \= "" + letrasNIEPermitidas[ ThreadLocalRandom.current().nextInt(0, 3) ];&\#13;\r\n\tfor(int j \= 1; j &lt; 8; j++){&\#13;\r\n\t\tInteger caracterAscii \= ThreadLocalRandom.current().nextInt(48, 58); // 58 excluido&\#13;\r\n\t\tcaso \= caso + String.valueOf( Character.toChars(caracterAscii) );&\#13;\r\n\t}&\#13;\r\n\tcaso \= caso + letrasNoPermitidas[ ThreadLocalRandom.current().nextInt(0, 4) ];&\#13;\r\n\tcasosTestFailNIE.add(caso);&\#13;\r\n}&\#13;\r\n&\#13;\r\nfor(String casoFail \: casosTestFailNIE){&\#13;\r\n&\#13;\r\n\tMatcher match \= patron.matcher(casoFail);&\#13;\r\n&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\tString cadenaMatchingRegex \= match.group();&\#13;\r\n\t\tif(cadenaMatchingRegex \=\= casoFail){&\#13;\r\n\t\t\tSystem.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t}&\#13;\r\n\t\telse System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( casoFail + " FAIL"); &\#13;\r\n}\t&\#13;\r\n&\#13;\r\n}&\#13;\r\n&\#13;\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="expresionesRegularesEjercicioDni" enabled\="true" name\="expresiones">\t\t&\#13;\r\n\t\t// Expresi\u00F3n regular para validar DNI OR NIE&\#13;\r\n&\#13;\r\nString regex \= "(^\\\\d{8}[A-Z&amp;&amp;[^I\u00C3\u2018OU]])|(^[XYZ]\\\\d{7}[A-Z&amp;&amp;[^I\u00C3\u2018OU]])";&\#13;\r\n&\#13;\r\n/* Caso test b\u00E1sico\: debe mostrar el mensaje en consola\:&\#13;\r\n * "No se ha encotrado el patr\u00F3n en " &\#13;\r\n * o PASS&\#13;\r\n * */&\#13;\r\n&\#13;\r\n// caso test\: NIE incorrecto&\#13;\r\n&\#13;\r\nString dni \= "X12345678L";&\#13;\r\n&\#13;\r\n// Compilamos la expresi\u00F3n regular (creamos el patr\u00F3n)&\#13;\r\n&\#13;\r\nPattern patron \= Pattern.compile(regex);&\#13;\r\n&\#13;\r\n// Creamos el objeto matcher donde buscar la expresi\u00F3n regular (el patr\u00F3n) &\#13;\r\n&\#13;\r\nMatcher matcher \= patron.matcher(dni);&\#13;\r\n&\#13;\r\nSystem.out.println( matcher );&\#13;\r\n&\#13;\r\n// find() devuelve true si encuentra el patr\u00F3n en el matcher.&\#13;\r\n&\#13;\r\nif(matcher.find()){&\#13;\r\n\t\t System.out.println( dni + " PASS");&\#13;\r\n}&\#13;\r\nelse System.out.println( "No se ha encotrado el patr\u00F3n en " + dni); &\#13;\r\n&\#13;\r\n&\#13;\r\n&\#13;\r\n/* Casos test PASS */&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test DNI PASS **** \\n"); &\#13;\r\n&\#13;\r\nString[] casosTest \= { // casos DNI PASS&\#13;\r\n \t\t"78484464T","72376173A","01817200Q","95882054E","63587725Q",&\#13;\r\n \t\t"26861694V","21616083Q","26868974Y","40135330P","89044648X",&\#13;\r\n \t\t"80117501Z","34168723S","76857238R","66714505S","66499420A",&\#13;\r\n \t\t// casos NIE PASS&\#13;\r\n \t\t"X1234567T", "Y1234567T", "Z1234567T",&\#13;\r\n \t\t// casos NIE FAIL&\#13;\r\n \t\t"J1234567T", "H1234567T", "R1234567T",&\#13;\r\n \t\t"X12345678X", "X1234T", "X1234567I"&\#13;\r\n \t\t};&\#13;\r\n&\#13;\r\nfor(String caso \: casosTest){&\#13;\r\n\t&\#13;\r\n\t// Genero un objeto matcher para cada caso test&\#13;\r\n\t&\#13;\r\n\tMatcher match \= patron.matcher(caso);&\#13;\r\n\t&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\t&\#13;\r\n\t\t // group() extrae el string que satisface la expresi\u00F3n regular del patr\u00F3n  &\#13;\r\n\t\t&\#13;\r\n\t\t String cadenaMatchingRegex \= match.group();&\#13;\r\n\t\t &\#13;\r\n\t\t // Si el string que ha hecho matching con la expresi\u00F3n regular es igual al caso test \=&gt;&\#13;\r\n\t\t // \=&gt; hemos pasado el caso test&\#13;\r\n\t\t &\#13;\r\n\t\t if(cadenaMatchingRegex \=\= caso){&\#13;\r\n\t\t\t System.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t }&\#13;\r\n\t\t else System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( "No se ha encotrado el patr\u00F3n en " + caso ); &\#13;\r\n\t&\#13;\r\n}&\#13;\r\n&\#13;\r\n/* test casos FAIL - utilizando ArrayList de Strings */&\#13;\r\n&\#13;\r\n// casos test DNI FAIL&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test DNI FAIL **** \\n"); &\#13;\r\n&\#13;\r\nchar[] letrasNoPermitidas \= {'I', '\u00D1', 'O', 'U'};&\#13;\r\nint numeroCasos \= 15;&\#13;\r\nString caso;&\#13;\r\n&\#13;\r\nArrayList&lt;String&gt; casosTestFail \= new ArrayList&lt;&gt;();&\#13;\r\n&\#13;\r\n// generamos los casos test y los a\u00F1adimos al ArrayList&\#13;\r\nfor(int i \= 1; i &lt;\= numeroCasos; i++){&\#13;\r\n\tcaso \= "";&\#13;\r\n\tfor(int j \= 1; j &lt; 9; j++){&\#13;\r\n\t\tInteger caracterAscii \= ThreadLocalRandom.current().nextInt(48, 58); // 58 excluido&\#13;\r\n\t\tcaso \= caso + String.valueOf( Character.toChars(caracterAscii) );&\#13;\r\n\t}&\#13;\r\n\tcaso \= caso + letrasNoPermitidas[ ThreadLocalRandom.current().nextInt(0, 4) ];&\#13;\r\n\tcasosTestFail.add(caso);&\#13;\r\n}&\#13;\r\n&\#13;\r\nfor(String casoFail \: casosTestFail){&\#13;\r\n&\#13;\r\n\tMatcher match \= patron.matcher(casoFail);&\#13;\r\n&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\tString cadenaMatchingRegex \= match.group();&\#13;\r\n\t\tif(cadenaMatchingRegex \=\= casoFail){&\#13;\r\n\t\t\tSystem.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t}&\#13;\r\n\t\telse System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( casoFail + " FAIL"); &\#13;\r\n&\#13;\r\n}&\#13;\r\n&\#13;\r\n&\#13;\r\n// casos test NIE FAIL&\#13;\r\n&\#13;\r\nSystem.out.println("\\n **** Casos test NIE FAIL **** \\n"); &\#13;\r\n&\#13;\r\nchar[] letrasNIEPermitidas \= {'X', 'Y', 'Z'};&\#13;\r\n&\#13;\r\nArrayList&lt;String&gt; casosTestFailNIE \= new ArrayList&lt;&gt;();&\#13;\r\n&\#13;\r\n// generamos los casos test y los a\u00F1adimos al ArrayList&\#13;\r\nfor(int i \= 1; i &lt;\= numeroCasos; i++){&\#13;\r\n\tcaso \= "" + letrasNIEPermitidas[ ThreadLocalRandom.current().nextInt(0, 3) ];&\#13;\r\n\tfor(int j \= 1; j &lt; 8; j++){&\#13;\r\n\t\tInteger caracterAscii \= ThreadLocalRandom.current().nextInt(48, 58); // 58 excluido&\#13;\r\n\t\tcaso \= caso + String.valueOf( Character.toChars(caracterAscii) );&\#13;\r\n\t}&\#13;\r\n\tcaso \= caso + letrasNoPermitidas[ ThreadLocalRandom.current().nextInt(0, 4) ];&\#13;\r\n\tcasosTestFailNIE.add(caso);&\#13;\r\n}&\#13;\r\n&\#13;\r\nfor(String casoFail \: casosTestFailNIE){&\#13;\r\n&\#13;\r\n\tMatcher match \= patron.matcher(casoFail);&\#13;\r\n&\#13;\r\n\tif(match.find()){&\#13;\r\n\t\tString cadenaMatchingRegex \= match.group();&\#13;\r\n\t\tif(cadenaMatchingRegex \=\= casoFail){&\#13;\r\n\t\t\tSystem.out.println(cadenaMatchingRegex + " PASS");&\#13;\r\n\t\t}&\#13;\r\n\t\telse System.out.println(cadenaMatchingRegex + " FAIL");&\#13;\r\n\t}&\#13;\r\n\telse System.out.println( casoFail + " FAIL"); &\#13;\r\n}\t&\#13;\r\n&\#13;\r\n}&\#13;\r\n&\#13;\r\n</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Courier New|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier New;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
